service: viteyourpick

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-southeast-2

functions:
  myLambdaFunction:
    handler: src/lambda.handler
    events:
      - http:
          path: myEndpoint
          method: post
           cors:
            # Configure CORS options as needed
            allowOrigin: '*'
            allowMethods: POST
            allowHeaders: '*'
    environment:
      # Use Secrets Manager or Parameter Store for sensitive data
      MY_SECRET: !Ref MySecret

# IAM Role with fine-grained permissions (replace with your specific DynamoDB table):
iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:GetItem
      - dynamodb:PutItem
    Resource: arn:aws:dynamodb:ap-southeast-2:YOUR_ACCOUNT_ID:table/my-dynamodb-table

# Define your DynamoDB table resources
resources:
  Resources:
    # ... (define your DynamoDB table configuration here)

# Event source mapping (replace with your actual API Gateway resource ARN)
EventSourceMapping:
  Type: AWS::Serverless::ApiGateway::EventSourceMapping
  Properties:
    RestApiId: !Ref ApiGateway
    ResourceId: !GetAtt MyApiGatewayResource.Id
    ResourcePath: /myEndpoint
    HttpMethod: POST
    FunctionName: !GetAtt myLambdaFunction.Arn

# API Gateway resource (example)
# Replace with your actual configuration and CORS options
MyApiGatewayResource:
  Type: AWS::Serverless::ApiGateway::Resource
  Properties:
    RestApiId: !Ref ApiGateway
    PathPart: /myEndpoint
    Cors: # Example CORS configuration
      AllowHeaders: "'*'"
      AllowMethods: "'POST'"
      AllowOrigin: "'*'"
